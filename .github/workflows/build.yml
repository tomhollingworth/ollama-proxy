name: Build Binaries

on:
  push:
    tags:
      - 'v*'

permissions: 
   contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            cgo_enabled: 0
            runs-on: ubuntu-latest
          - goos: linux
            goarch: amd64
            cgo_enabled: 0
            runs-on: ubuntu-latest
          - goos: linux
            goarch: arm
            cgo_enabled: 0
            runs-on: ubuntu-latest
          - goos: linux
            goarch: arm64
            cgo_enabled: 0
            runs-on: ubuntu-latest
          - goos: darwin
            goarch: amd64
            cgo_enabled: 1
            runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
      
      - name: Get dependencies
        run: go mod download
      
      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/ollama-proxy-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} main.go
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ollama-proxy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/ollama-proxy-${{ matrix.goos }}-${{ matrix.goarch }}*
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release
        find ./artifacts -type f -name "ollama-proxy-*" -exec cp {} ./release/ \;
        ls -la ./release/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./release/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## Release ${{ github.ref_name }}
          
          Automated release created from tag ${{ github.ref_name }}.
          
          ### Downloads
          
          Choose the appropriate binary for your system:

          - **Windows (64-bit)**: `ollama-proxy-windows-amd64.exe`
          - **macOS (64-bit Intel)**: `ollama-proxy-darwin-amd64`
          - **Linux (64-bit)**: `ollama-proxy-linux-amd64`
          - **Linux (ARM 32-bit)**: `ollama-proxy-linux-arm`
          - **Linux (ARM 64-bit)**: `ollama-proxy-linux-arm64`

          ### Installation
          
          1. Download the appropriate binary for your system
          2. Make it executable (Linux/macOS): `chmod +x ollama-proxy-*`
          3. Run with: `./ollama-proxy-* --help`
          
          For more information, see the [README](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/README.md).
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}